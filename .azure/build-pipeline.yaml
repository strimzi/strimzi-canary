trigger: 
  branches:
    include:
    - 'main'

pr:
  autoCancel: true
  branches:
    include:
    - '*'

stages:
- stage: go_test
  displayName: Go Test
  jobs:
  - job: go_test
    displayName: Go Test
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: GoTool@0
      inputs:
        version: '1.16.3'
    - task: Go@0
      displayName: Go Unit Tests
      inputs:
        command: test
        arguments: ./internal/... --tags=unit_test
    - task: Go@0
      displayName: Go e2e Tests
      inputs:
        command: test
        arguments: ./test/... --tags=e2e
- stage: go_build
  displayName: Go Build
  dependsOn:
  - go_test
  jobs:
  - job: go_build
    displayName: Go Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: GoTool@0
      inputs:
        version: '1.16.3'
    - bash: make go_build
      displayName: Go Build
    # We have to TAR the target directory to maintain the permissions of 
    # the files which would otherwise change when downloading the artifact
    - bash: tar -cvpf target.tar ./cmd/target
      displayName: "Tar the target directory"      
    - publish: $(System.DefaultWorkingDirectory)/target.tar
      displayName: Publish binary
      artifact: Binary
- stage: container_build
  displayName: Prepare Container
  dependsOn:
  - go_build
  jobs:
  - job: container_build
    displayName: Container Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DockerInstaller@0
      displayName: Docker Installer
      inputs:
        dockerVersion: 20.10.8
        releaseType: stable
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: Binary
        path: $(Build.SourcesDirectory)/
    - bash: tar -xvf target.tar
      displayName: "Untar the target directory"        
    - bash: .azure/scripts/container-build.sh
      displayName: Docker Build & Save
      env:
        DOCKER_REGISTRY: quay.io
        DOCKER_ORG: strimzi
    - publish: $(System.DefaultWorkingDirectory)/canary-container.tar.gz
      displayName: Publish container
      artifact: Container
